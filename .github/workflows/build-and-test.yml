# Pull Request が更新されるたびに走らせる
on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - '*'
  push:
    branches:
      - devGithubAction # 특정 브랜치에서 Push 이벤트 트리거

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '18.15.0' ]
    steps:
      # Pull Request 出された branch の最新の commit のソースコードを使用する
      - name: checkout pushed commit
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      # containerd 패키지 및 의존성 제거
      - name: Remove existing containerd
        run: |
          sudo apt-get remove -y containerd containerd.io
          sudo apt-get autoremove -y
          sudo apt-get clean

      # Docker 및 Docker-Compose 설치
      - name: Install Docker and Docker-Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Node.js のビルドが通るか検証する
      - name: npm install, build.
        run: |
          npm install
          npm run build --if-present

      # Docker Compose로 E2E 테스트 실행
      - name: run test on docker-compose
        run: |
          docker-compose build
          docker-compose up --abort-on-container-exit --exit-code-from app
          docker-compose logs app
          docker-compose down  # 완료 후 모든 컨테이너를 정리
        working-directory: ./devenv
#        # Docker Compose로 E2E 테스트 실행
#      - name: run test on docker-compose
#        run: |
#          docker-compose build
#          docker-compose up --abort-on-container-exit --exit-code-from app
#        working-directory: ./devenv
